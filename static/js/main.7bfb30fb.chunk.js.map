{"version":3,"sources":["api/Jedi.png","api/Sith.png","api/BountyHunter.png","api/Hutt.png","api/Droid.png","api/Smuggler.png","assets/BannerBlue.png","assets/BannerPINK.png","assets/BannerOrange.png","api/quizQuestions.js","components/Question.js","components/QuestionCount.js","components/AnswerOption.js","components/Quiz.js","components/Card.js","components/Share.js","components/Result.js","components/Hero.js","components/Footer.js","App.js","serviceWorker.js","webpack:///./src/index.js?b635"],"names":["module","exports","quizQuestions","question","answers","type","content","Question","props","className","QuestionCount","counter","total","AnswerOption","name","chekcked","answerType","answer","id","value","disabled","onChange","onAnswerSelected","htmlFor","answerContent","Quiz","component","transitionName","transitionEnterTimeout","transitionLeaveTimeout","transitionAppear","transitionAppearTimeout","key","questionId","questionTotal","answerOptions","map","Card","personality","src","Jedi","Sith","BountyHunter","Hutt","Droid","Smuggler","Share","result","solid","small","message","link","subject","style","background","Result","quizResult","randomInt","Math","floor","random","Hero","state","images","BannerBlue","BannerOrange","BannerPINK","this","Component","Footer","href","App","answersCount","handleAnswerSelected","bind","shuffledAnswerOptions","shuffleArray","setState","document","getElementsByClassName","backgroundImage","array","temporaryValue","randomIndex","currentIndex","length","event","setUserAnswer","currentTarget","setTimeout","setNextQuestion","setResults","getResults","answersCountKeys","Object","keys","answersCountValues","maxAnswerCount","max","apply","filter","indexOf","getElementById","color","renderResult","renderQuiz","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.7bfb30fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Jedi.d8e1e51c.png\";","module.exports = __webpack_public_path__ + \"static/media/Sith.9fe1810f.png\";","module.exports = __webpack_public_path__ + \"static/media/BountyHunter.a55678fc.png\";","module.exports = __webpack_public_path__ + \"static/media/Hutt.cb3c7f3d.png\";","module.exports = __webpack_public_path__ + \"static/media/Droid.357cd21a.png\";","module.exports = __webpack_public_path__ + \"static/media/Smuggler.3344c1f3.png\";","module.exports = __webpack_public_path__ + \"static/media/BannerBlue.5faf5cb4.png\";","module.exports = __webpack_public_path__ + \"static/media/BannerPINK.512ea495.png\";","module.exports = __webpack_public_path__ + \"static/media/BannerOrange.015d7b5b.png\";","var quizQuestions = [\n  {\n      question: \"You walk into a space bar you are most likely going to…\",\n      answers: [\n          {\n              type: \"Jedi\",\n              content: \"Shoot first\"\n          },\n          {\n              type: \"Bounty Hunter\",\n              content: \"Bring a droid\"\n          },\n          {\n              type: \"Sith Lord\",\n              content: \"Collect a bounty\"\n          }\n      ]\n  },\n  {\n      question: \"You start your pod racer and are about to finish the race. When you are about to finish, your pod racer begins to loose power. To save your pod, you…\",\n      answers: [\n          {\n              type: \"Jedi\",\n              content: \"Feel the force\"\n          },\n          {\n              type: \"Bounty Hunter\",\n              content: \"Crash into you opponent so nobody can win\"\n          },\n          {\n              type: \"Sith Lord\",\n              content: \"Slow down and lose, remaining a slave on tatooine\"\n          }\n      ]\n  },\n  {\n      question: \"While about to engage in a fight, you draw…\",\n      answers: [\n          {\n              type: \"Jedi\",\n              content: \"A green lightsaber \"\n          },\n          {\n              type: \"Bounty Hunter\",\n              content: \"A viro-blade\"\n          },\n          {\n              type: \"Sith Lord\",\n              content: \"A bowcaster rifle\"\n          }\n      ]\n  },\n  {\n      question: \"While walking lost through the snowy embankment of Hoth, you uncover a tauntaun carcass. What will you do?\",\n      answers: [\n          {\n              type: \"Jedi\",\n              content: \"Use the carcass for heat\"\n          },\n          {\n              type: \"Bounty Hunter\",\n              content: \"Eat the carcass like a Wampa\"\n          },\n          {\n              type: \"Sith Lord\",\n              content: \"Use the force to save yourself from dying\"\n          }\n      ]\n  },\n  {\n      question: \"You’re on an important mission to Alderaan. Who do you take with you?\",\n      answers: [\n          {\n              type: \"Jedi\",\n              content: \"R2D2\"\n          },\n          {\n              type: \"Bounty Hunter\",\n              content: \"Boba Fett\"\n          },\n          {\n              type: \"Sith Lord\",\n              content: \"Stormtroopers to arrest the Rebel Scum\"\n          }\n      ]\n  },\n  {\n      question: \"The Death Star Plans have been stolen! What is your first response?\",\n      answers: [\n          {\n              type: \"Jedi\",\n              content: \"Beam the plans to the Rebels\"\n          },\n          {\n              type: \"Bounty Hunter\",\n              content: \"Blow up the base and collect your payment\"\n          },\n          {\n              type: \"Sith Lord\",\n              content: \"Prepare a boarding party…\"\n          }\n      ]\n  },\n  {\n      question: \"You’ve arrived to the trading outpost of Kijimi to meet Babu Frik. You are seeking a new weapon, what you do buy?\",\n      answers: [\n          {\n              type: \"Jedi\",\n              content: \"Blue Lightsaber\"\n          },\n          {\n              type: \"Bounty Hunter\",\n              content: \"Thermal Detonator\"\n          },\n          {\n              type: \"Sith Lord\",\n              content: \"E-11 Blaster\"\n          }\n      ]\n  },\n  {\n      question: \"Ah, you have just had a long day of traveling though the Judland Wastelands of Tatooine. You require some substance… What sustenance do you consume?\",\n      answers: [\n          {\n              type: \"Jedi\",\n              content: \"Blue Milk\"\n          },\n          {\n              type: \"Bounty Hunter\",\n              content: \"Wookie Meat\"\n          },\n          {\n              type: \"Sith Lord\",\n              content: \"Lighting Shocked Bantha Soup\"\n          }\n      ]\n  },\n  {\n      question: \"You’re searching through your holobank map to find out where to travel next. What planet do you decide to jump hyperspace to?\",\n      answers: [\n          {\n              type: \"Jedi\",\n              content: \"Tatooine\"\n          },\n          {\n              type: \"Bounty Hunter\",\n              content: \"Mustafar\"\n          },\n          {\n              type: \"Sith Lord\",\n              content: \"Naboo\"\n          }\n      ]\n  },\n  {\n      question: \"War has suddenly plagued the Galaxy. As a senator to your planet, you are asked to grant the Chancellor emergency powers to fund a defensive war effort. What do you vote on?\",\n      answers: [\n          {\n              type: \"Jedi\",\n              content: \"Extending the Chancellor’s time in office for your own political gain\"\n          },\n          {\n              type: \"Bounty Hunter\",\n              content: \"A vote of no confidence\"\n          },\n          {\n              type: \"Sith Lord\",\n              content: \"Voting for a more diplomatic solution\"\n          }\n      ]\n  }\n];\n\nexport default quizQuestions;\n","import React from 'react';\n\nfunction Question(props) {\n  return (\n    <h2 className=\"question\"><em> {props.content} </em></h2>\n  );\n}\n\n\nexport default Question;\n","import React from 'react';\n\nfunction QuestionCount(props) {\n  return (\n    <div className=\"questionCount\">\n      Question <span>{props.counter}</span> of <span>{props.total}</span>\n  </div>\n);\n}\n\nexport default QuestionCount;\n","import React from 'react';\n\nfunction AnswerOption(props) {\n  return (\n    <li className=\"AnswerOption\">\n      <input\n        type=\"radio\"\n        className=\"radioCustomButton\"\n        name=\"radioGroup\"\n        chekcked={props.answerType === props.answer}\n        id={props.answerType}\n        value={props.answerType}\n        disabled={props.answer}\n        onChange={props.onAnswerSelected}\n        />\n      <label className=\"radioCustomLabel\" htmlFor={props.answerType}>\n        {props.answerContent}\n      </label>\n    </li>\n  );\n}\n\nexport default AnswerOption;\n","import React from 'react';\nimport Question from './Question';\nimport QuestionCount from './QuestionCount';\nimport AnswerOption from './AnswerOption';\nimport { CSSTransitionGroup } from 'react-transition-group';\n\nfunction Quiz(props) {\n\n  function renderAnswerOptions(key) {\n    return (\n      <AnswerOption\n        key={key.content}\n        answerContent={key.content}\n        answerType={key.type}\n        answer={props.answer}\n        questionId={props.questionId}\n        onAnswerSelected={props.onAnswerSelected}\n        />\n    );\n  }\n\n  return (\n      <div className=\"quiz\">\n        <CSSTransitionGroup\n          className=\"container\"\n           component=\"div\"\n          transitionName=\"fade\"\n          transitionEnterTimeout={800}\n          transitionLeaveTimeout={500}\n          transitionAppear\n          transitionAppearTimeout={500}\n          >\n        <div key={props.questionId}>\n          <QuestionCount counter={props.questionId} total={props.questionTotal} />\n          <Question content={props.question} />\n          <ul className=\"answerOptions\">\n            {props.answerOptions.map(renderAnswerOptions)}\n          </ul>\n        </div>\n        </CSSTransitionGroup>\n      </div>\n  );\n}\n\nexport default Quiz;\n","import React, {Component} from 'react';\nimport Jedi from '../api/Jedi.png';\nimport Sith from '../api/Sith.png';\nimport BountyHunter from '../api/BountyHunter.png';\nimport Hutt from '../api/Hutt.png';\nimport Droid from '../api/Droid.png';\nimport Smuggler from '../api/Smuggler.png';\n\nfunction Card(props){\n\n  if (props.personality === \"Jedi\") {\n    return (\n      <div>\n      <img className=\"card\" src={Jedi}/>\n      </div>\n    );\n  } else if (props.personality === \"Sith Lord\") {\n    return(\n      <div>\n      <img className=\"card\" src={Sith}/>\n      </div>\n    );\n  } else if (props.personality === \"Bounty Hunter\"){\n    return(\n      <div>\n      <img className=\"card\" src={BountyHunter}/>\n      </div>\n    );\n  } else if (props.personality === \"Hutt Crime Lord\") {\n    return(\n      <div>\n      <img className=\"card\" src={Hutt}/>\n      </div>\n    );\n  } else if (props.personality === \"Droid\") {\n    return(\n      <div>\n      <img className=\"card\" src={Droid}/>\n      </div>\n    );\n  }\n  return(\n    <div>\n    <img className=\"card\" src={Smuggler}/>\n    </div>\n  );\n\n}\n\n\nexport default Card;\n","import React from 'react';\nimport { Twitter, Facebook, Mail, Whatsapp } from 'react-social-sharing'\n\nfunction Share(props) {\n\n  if (props.result) {\n    return (\n      <>\n      <h3>Share your result!</h3>\n      <Twitter solid small message={`I am a ${props.result}! What are you?`} link=\"https://sadchocopie.github.io/starwars-quiz\"/>\n      <Facebook solid small link=\"https://sadchocopie.github.io/starwars-quiz\"/>\n      <Mail solid small subject={`I am a ${props.result}! What are you?`} link=\"http://sharingbuttons.io\" style={{background:'red'}}/>\n      <Whatsapp solid small message={`I am a ${props.result}! What are you?`} link=\"http://sharingbuttons.io\"/>\n      </>\n    );\n  }\n  return null;\n}\n\nexport default Share;\n","import React from 'react';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Card from './Card';\nimport Share from './Share'\n\nfunction Result(props) {\n  return (\n    <div>\n      <CSSTransitionGroup\n        className=\"result\"\n        className=\"container\"\n        component=\"div\"\n        transitionName=\"fade\"\n        transitionEnterTimeout={800}\n        transitionLeaveTimeout={500}\n        transitionAppear\n        transitionAppearTimeout={800}>\n        <h1 className=\"result-text\">You are...<strong>a {props.quizResult}</strong>!</h1>\n        <Card personality={props.quizResult}></Card>\n        <Share result={props.quizResult}></Share>\n      </CSSTransitionGroup>\n    </div>\n  );\n}\n\nexport default Result;\n","import React, {Component} from 'react';\nimport BannerBlue from '../assets/BannerBlue.png';\nimport BannerPINK from '../assets/BannerPINK.png';\nimport BannerOrange from '../assets/BannerOrange.png';\n\nvar randomInt = Math.floor(Math.random() * 3)\nclass Hero extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      images: [BannerBlue, BannerOrange, BannerPINK]\n    };\n  }\n\n  render() {\n    return (\n      <div>\n      <header className=\"App-header\">\n      <img className=\"App-header\" src={this.state.images[randomInt]}/>\n      <h1 className=\"hero-text\">Choose Your Destiny</h1>\n      </header>\n      </div>\n    );\n  }\n}\n\n\nexport default Hero;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n    Graphic Designs by <a href=\"http://flutterspace.com/\">Daniel</a> <br/>Developed by <a href=\"https://github.com/sadchocopie\">Harriet</a></div>\n  );\n}\n\nexport default Footer;\n","import React, {Component} from 'react';\nimport './App.scss';\nimport quizQuestions from './api/quizQuestions';\nimport Quiz from './components/Quiz'\nimport Result from './components/Result'\nimport Hero from './components/Hero'\nimport Footer from './components/Footer'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      counter: 0,\n      questionId: 1,\n      question: '',\n      answerOptions: [],\n      answer: '',\n      answersCount: {},\n      result: ''\n    };\n\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n  }\n\n  componentDidMount() {\n    const shuffledAnswerOptions = quizQuestions.map((question) => this.shuffleArray(question.answers));\n\n    this.setState({\n      question: quizQuestions[0].question,\n      answerOptions:shuffledAnswerOptions[0]\n    });\n\n    var random= Math.floor(Math.random() * 4) + 0;\n    var bigSize = [\"url('./assets/BannerBlue.png')\",\n    \"url('./assets/BannerOrange.png')\",\n    \"url('./assets/BannerPINK.png')\",\n    \"url('./assets/BannerViolet.png')\"];\n    document.getElementsByClassName(\"App-header\")[0].style.backgroundImage=bigSize[random];\n  }\n\n  //randomise array (the order of the answer options)\n  //fisher-yates algorithm\n  shuffleArray(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n    while (0 !== currentIndex) {\n      //pick a remaining element\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -=1;\n      //swap with current elements\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  }\n\n  // object composition\n  setUserAnswer(answer) {\n    // fuctional setState to access previous state \"answer\",\n    this.setState((state) => ({\n      // update answer without mutating it directly\n      answersCount: {...state.answersCount,\n        [answer]: (state.answersCount[answer] || 0) + 1\n      },\n      answer:answer\n    }))\n  }\n\n  //select answer + set next question\n  handleAnswerSelected(event) {\n    this.setUserAnswer(event.currentTarget.value);\n    //while user havent finished all questions\n    if(this.state.questionId < quizQuestions.length) {\n      setTimeout(() => this.setNextQuestion(),300);\n    } else {\n      //delay before showing result\n      setTimeout(() => this.setResults(this.getResults()), 300);\n    }\n  }\n\n  setNextQuestion() {\n    const counter = this.state.counter + 1;\n    const questionId = this.state.questionId + 1;\n    this.setState({\n      counter:counter,\n      questionId: questionId,\n      question: quizQuestions[counter].question,\n      answerOptions: quizQuestions[counter].answers,\n      answer:''\n    });\n  }\n\n  getResults() {\n    const answersCount = this.state.answersCount;\n    const answersCountKeys = Object.keys(answersCount);\n    const answersCountValues = answersCountKeys.map((key) => answersCount[key]);\n    const maxAnswerCount = Math.max.apply(null, answersCountValues);\n\n    return answersCountKeys.filter((key) => answersCount[key] === maxAnswerCount);\n  }\n\n  setResults (result) {\n    if (result.length === 1) {\n      this.setState({ result: result[0] });\n    }\n    else if (result.indexOf('Jedi') === -1) {\n      this.setState({ result: 'Spice Smuggler' });\n    }\n    else if (result.indexOf('Bounty Hunter') === -1) {\n      this.setState({ result: 'Droid' });\n    }\n    else {\n      this.setState({ result: 'Hutt Crime Lord' });\n    }\n  }\n\n  renderQuiz() {\n    return (\n      <Quiz\n        answer={this.state.answer}\n        answerOptions={this.state.answerOptions}\n        questionId={this.state.questionId}\n        question={this.state.question}\n        questionTotal={quizQuestions.length}\n        onAnswerSelected={this.handleAnswerSelected}\n        />\n    );\n  }\n\n  renderResult() {\n    return <Result quizResult={this.state.result} />;\n  }\n\n  randombg(){\n    var random= Math.floor(Math.random() * 4) + 0;\n    var bigSize = [\"url('./assets/BannerBlue.png')\",\n    \"url('./assets/BannerOrange.png')\",\n    \"url('./assets/BannerPINK.png')\",\n    \"url('./assets/BannerViolet.png')\"];\n    document.getElementsByClassName[0](\"App-header\").style.backgroundImage=bigSize[random];\n    document.getElementById(\"hero-text\").style.color=\"black\";\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Hero></Hero>\n        {this.state.result ? this.renderResult() : this.renderQuiz()}\n        <Footer></Footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}